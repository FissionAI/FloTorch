CREATE TABLE "credentials" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "credentials_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"workspaceId" integer NOT NULL,
	"name" text NOT NULL,
	"uid" uuid DEFAULT gen_random_uuid() NOT NULL,
	"provider" text DEFAULT 'local' NOT NULL,
	"encryptedValue" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL,
	CONSTRAINT "credentials_workspaceId_name_unique" UNIQUE("workspaceId","name")
);
--> statement-breakpoint
CREATE TABLE "vectorstorages" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "vectorstorages_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"uid" uuid DEFAULT gen_random_uuid() NOT NULL,
	"workspaceId" integer NOT NULL,
	"providerId" integer NOT NULL,
	"name" text NOT NULL,
	"description" text,
	"dbName" text NOT NULL,
	"retrievalModelVersionId" integer,
	"generatingModelVersionId" integer,
	"searchEnabled" boolean DEFAULT false NOT NULL,
	"config" jsonb,
	"status" text DEFAULT 'Inactive' NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL,
	CONSTRAINT "vectorstorages_workspaceId_name_unique" UNIQUE("workspaceId","name")
);
--> statement-breakpoint
ALTER TABLE "providers" DROP CONSTRAINT "providers_workspaceId_name_unique";--> statement-breakpoint
ALTER TABLE "providers" ALTER COLUMN "configSchema" DROP DEFAULT;--> statement-breakpoint
ALTER TABLE "providers" ALTER COLUMN "configSchema" DROP NOT NULL;--> statement-breakpoint
ALTER TABLE "providers" ADD COLUMN "type" text DEFAULT 'LLM' NOT NULL;--> statement-breakpoint
ALTER TABLE "providers" ADD COLUMN "providerConfig" jsonb;--> statement-breakpoint
ALTER TABLE "providers" ADD COLUMN "credentialsId" integer;--> statement-breakpoint
ALTER TABLE "credentials" ADD CONSTRAINT "credentials_workspaceId_workspaces_id_fk" FOREIGN KEY ("workspaceId") REFERENCES "public"."workspaces"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "vectorstorages" ADD CONSTRAINT "vectorstorages_workspaceId_workspaces_id_fk" FOREIGN KEY ("workspaceId") REFERENCES "public"."workspaces"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "vectorstorages" ADD CONSTRAINT "vectorstorages_providerId_providers_id_fk" FOREIGN KEY ("providerId") REFERENCES "public"."providers"("id") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "vectorstorages" ADD CONSTRAINT "vectorstorages_retrievalModelVersionId_models_id_fk" FOREIGN KEY ("retrievalModelVersionId") REFERENCES "public"."models"("id") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "vectorstorages" ADD CONSTRAINT "vectorstorages_generatingModelVersionId_models_id_fk" FOREIGN KEY ("generatingModelVersionId") REFERENCES "public"."models"("id") ON DELETE restrict ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "providers" ADD CONSTRAINT "providers_credentialsId_credentials_id_fk" FOREIGN KEY ("credentialsId") REFERENCES "public"."credentials"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "providers" ADD CONSTRAINT "providers_workspaceId_type_name_unique" UNIQUE("workspaceId","type","name");