apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: redis
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --bind
        - 0.0.0.0
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
